// This file is part of Metallic, a runtime library for WebAssembly.
//
// Copyright (C) 2017 Chen-Pang He <chen.pang.he@jdh8.org>
//
// This Source Code Form is subject to the terms of the Mozilla
// Public License v. 2.0. If a copy of the MPL was not distributed
// with this file, You can obtain one at http://mozilla.org/MPL/2.0/

#ifndef _METALLIC_TYPE_TRAITS
#define _METALLIC_TYPE_TRAITS

namespace std {

template<typename _T, _T __v>
struct integral_constant
{
    typedef integral_constant type;
    typedef _T value_type;

    static constexpr _T value = __v;

    constexpr operator value_type() const { return value; }

#if __cplusplus >= 201402L
    constexpr value_type operator()() const { return value; }
#endif
};

template<typename _T, _T __v>
constexpr _T integral_constant<_T, __v>::value;

typedef integral_constant<bool, true> true_type;
typedef integral_constant<bool, false> false_type;

} // namespace std

#endif // <type_traits>

// vim: ft=cpp
